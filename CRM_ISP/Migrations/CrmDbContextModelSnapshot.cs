// <auto-generated />
using System;
using CRM_ISP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRM_ISP.Migrations
{
    [DbContext(typeof(CrmDbContext))]
    partial class CrmDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRM_ISP.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("AdminGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdminJoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AdminPassword")
                        .HasColumnType("int");

                    b.Property<int>("AdminPhone")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AdminId");

                    b.HasIndex("RoleId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("CRM_ISP.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AreaId"));

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AreaId");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("CRM_ISP.Models.Billing", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingId"));

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BillingId");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("CRM_ISP.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CRM_ISP.Models.Complain", b =>
                {
                    b.Property<int>("ComplainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplainId"));

                    b.Property<DateTime>("ComplainDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ComplainDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplainType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComplainId");

                    b.ToTable("Complaines");
                });

            modelBuilder.Entity("CRM_ISP.Models.ComplainStatus", b =>
                {
                    b.Property<int>("ComplainStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplainStatusId"));

                    b.Property<int>("ComplainId")
                        .HasColumnType("int");

                    b.Property<bool>("StatusType")
                        .HasColumnType("bit");

                    b.HasKey("ComplainStatusId");

                    b.HasIndex("ComplainId");

                    b.ToTable("ComplainesStatuses");
                });

            modelBuilder.Entity("CRM_ISP.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int>("ComplainId")
                        .HasColumnType("int");

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RatingMessage")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("ComplainId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("CRM_ISP.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"));

                    b.Property<int>("PackageDuration")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PackagePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PackageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("CRM_ISP.Models.RegistrationMessage", b =>
                {
                    b.Property<int>("RegistrationMessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistrationMessageId"));

                    b.Property<string>("MessageBody")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RegistrationMessageId");

                    b.ToTable("RegistrationMessages");
                });

            modelBuilder.Entity("CRM_ISP.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CRM_ISP.Models.SupportEngineer", b =>
                {
                    b.Property<int>("SupportEngineerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportEngineerId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SupportEngineerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportEngineerGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SupportEngineerJoinDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("SupportEngineerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupportEngineerPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupportEngineerPhone")
                        .HasColumnType("int");

                    b.HasKey("SupportEngineerId");

                    b.HasIndex("AreaId");

                    b.HasIndex("RoleId");

                    b.ToTable("SupportEngineers");
                });

            modelBuilder.Entity("CRM_ISP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserCreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("AreaId");

                    b.HasIndex("CityId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CRM_ISP.Models.UserComplain", b =>
                {
                    b.Property<int>("UserComplainId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserComplainId"));

                    b.Property<int>("ComplainId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserComplainId");

                    b.HasIndex("ComplainId");

                    b.HasIndex("UserId");

                    b.ToTable("UserComplain");
                });

            modelBuilder.Entity("CRM_ISP.Models.UserPackage", b =>
                {
                    b.Property<int>("UserPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPackageId"));

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PackageStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserPackageId");

                    b.HasIndex("PackageId");

                    b.HasIndex("UserId");

                    b.ToTable("UsersPackages");
                });

            modelBuilder.Entity("CRM_ISP.Models.Admin", b =>
                {
                    b.HasOne("CRM_ISP.Models.Role", "Role")
                        .WithMany("Admins")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRM_ISP.Models.Billing", b =>
                {
                    b.HasOne("CRM_ISP.Models.Package", "Package")
                        .WithMany("Billings")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.User", "User")
                        .WithMany("Billings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRM_ISP.Models.ComplainStatus", b =>
                {
                    b.HasOne("CRM_ISP.Models.Complain", "Complain")
                        .WithMany("ComplainStatuses")
                        .HasForeignKey("ComplainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complain");
                });

            modelBuilder.Entity("CRM_ISP.Models.Feedback", b =>
                {
                    b.HasOne("CRM_ISP.Models.Complain", "Complain")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ComplainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complain");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRM_ISP.Models.SupportEngineer", b =>
                {
                    b.HasOne("CRM_ISP.Models.Area", "Area")
                        .WithMany("SupportEngineers")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.Role", "Role")
                        .WithMany("SupportEngineers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRM_ISP.Models.User", b =>
                {
                    b.HasOne("CRM_ISP.Models.Area", "Area")
                        .WithMany("Users")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("City");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("CRM_ISP.Models.UserComplain", b =>
                {
                    b.HasOne("CRM_ISP.Models.Complain", "Complain")
                        .WithMany("UserComplains")
                        .HasForeignKey("ComplainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.User", "User")
                        .WithMany("UserComplains")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Complain");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRM_ISP.Models.UserPackage", b =>
                {
                    b.HasOne("CRM_ISP.Models.Package", "Package")
                        .WithMany("UserPackages")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRM_ISP.Models.User", "User")
                        .WithMany("UserPackages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Package");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CRM_ISP.Models.Area", b =>
                {
                    b.Navigation("SupportEngineers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM_ISP.Models.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM_ISP.Models.Complain", b =>
                {
                    b.Navigation("ComplainStatuses");

                    b.Navigation("Feedbacks");

                    b.Navigation("UserComplains");
                });

            modelBuilder.Entity("CRM_ISP.Models.Package", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("UserPackages");
                });

            modelBuilder.Entity("CRM_ISP.Models.Role", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("SupportEngineers");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CRM_ISP.Models.User", b =>
                {
                    b.Navigation("Billings");

                    b.Navigation("Feedbacks");

                    b.Navigation("UserComplains");

                    b.Navigation("UserPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
